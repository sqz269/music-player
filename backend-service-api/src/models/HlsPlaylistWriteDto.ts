/* tslint:disable */
/* eslint-disable */
/**
 * TlmcPlayerBackend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { HlsPlaylistType } from './HlsPlaylistType';
import {
    HlsPlaylistTypeFromJSON,
    HlsPlaylistTypeFromJSONTyped,
    HlsPlaylistTypeToJSON,
} from './HlsPlaylistType';

/**
 * 
 * @export
 * @interface HlsPlaylistWriteDto
 */
export interface HlsPlaylistWriteDto {
    /**
     * 
     * @type {string}
     * @memberof HlsPlaylistWriteDto
     */
    id?: string;
    /**
     * 
     * @type {HlsPlaylistType}
     * @memberof HlsPlaylistWriteDto
     */
    type?: HlsPlaylistType;
    /**
     * 
     * @type {number}
     * @memberof HlsPlaylistWriteDto
     */
    bitrate?: number;
    /**
     * 
     * @type {string}
     * @memberof HlsPlaylistWriteDto
     */
    hlsPlaylistPath?: string;
    /**
     * 
     * @type {string}
     * @memberof HlsPlaylistWriteDto
     */
    trackId?: string;
}

/**
 * Check if a given object implements the HlsPlaylistWriteDto interface.
 */
export function instanceOfHlsPlaylistWriteDto(value: object): boolean {
    return true;
}

export function HlsPlaylistWriteDtoFromJSON(json: any): HlsPlaylistWriteDto {
    return HlsPlaylistWriteDtoFromJSONTyped(json, false);
}

export function HlsPlaylistWriteDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): HlsPlaylistWriteDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'type': json['type'] == null ? undefined : HlsPlaylistTypeFromJSON(json['type']),
        'bitrate': json['bitrate'] == null ? undefined : json['bitrate'],
        'hlsPlaylistPath': json['hlsPlaylistPath'] == null ? undefined : json['hlsPlaylistPath'],
        'trackId': json['trackId'] == null ? undefined : json['trackId'],
    };
}

export function HlsPlaylistWriteDtoToJSON(value?: HlsPlaylistWriteDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'type': HlsPlaylistTypeToJSON(value['type']),
        'bitrate': value['bitrate'],
        'hlsPlaylistPath': value['hlsPlaylistPath'],
        'trackId': value['trackId'],
    };
}

