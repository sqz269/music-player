/* tslint:disable */
/* eslint-disable */
/**
 * AuthenticationService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { LocalizedField } from './LocalizedField';
import {
    LocalizedFieldFromJSON,
    LocalizedFieldFromJSONTyped,
    LocalizedFieldToJSON,
} from './LocalizedField';

/**
 * 
 * @export
 * @interface OriginalAlbumReadDto
 */
export interface OriginalAlbumReadDto {
    /**
     * 
     * @type {string}
     * @memberof OriginalAlbumReadDto
     */
    id?: string | null;
    /**
     * 
     * @type {string}
     * @memberof OriginalAlbumReadDto
     */
    type?: string | null;
    /**
     * 
     * @type {LocalizedField}
     * @memberof OriginalAlbumReadDto
     */
    fullName?: LocalizedField;
    /**
     * 
     * @type {LocalizedField}
     * @memberof OriginalAlbumReadDto
     */
    shortName?: LocalizedField;
}

/**
 * Check if a given object implements the OriginalAlbumReadDto interface.
 */
export function instanceOfOriginalAlbumReadDto(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OriginalAlbumReadDtoFromJSON(json: any): OriginalAlbumReadDto {
    return OriginalAlbumReadDtoFromJSONTyped(json, false);
}

export function OriginalAlbumReadDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): OriginalAlbumReadDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'fullName': !exists(json, 'fullName') ? undefined : LocalizedFieldFromJSON(json['fullName']),
        'shortName': !exists(json, 'shortName') ? undefined : LocalizedFieldFromJSON(json['shortName']),
    };
}

export function OriginalAlbumReadDtoToJSON(value?: OriginalAlbumReadDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'type': value.type,
        'fullName': LocalizedFieldToJSON(value.fullName),
        'shortName': LocalizedFieldToJSON(value.shortName),
    };
}

