/* tslint:disable */
/* eslint-disable */
/**
 * MusicDataService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AlbumReadDto } from './AlbumReadDto';
import {
    AlbumReadDtoFromJSON,
    AlbumReadDtoFromJSONTyped,
    AlbumReadDtoToJSON,
} from './AlbumReadDto';

/**
 * 
 * @export
 * @interface AlbumsListResult
 */
export interface AlbumsListResult {
    /**
     * 
     * @type {Array<AlbumReadDto>}
     * @memberof AlbumsListResult
     */
    albums?: Array<AlbumReadDto> | null;
    /**
     * 
     * @type {number}
     * @memberof AlbumsListResult
     */
    count?: number;
    /**
     * 
     * @type {number}
     * @memberof AlbumsListResult
     */
    total?: number;
}

/**
 * Check if a given object implements the AlbumsListResult interface.
 */
export function instanceOfAlbumsListResult(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AlbumsListResultFromJSON(json: any): AlbumsListResult {
    return AlbumsListResultFromJSONTyped(json, false);
}

export function AlbumsListResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlbumsListResult {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'albums': !exists(json, 'albums') ? undefined : (json['albums'] === null ? null : (json['albums'] as Array<any>).map(AlbumReadDtoFromJSON)),
        'count': !exists(json, 'count') ? undefined : json['count'],
        'total': !exists(json, 'total') ? undefined : json['total'],
    };
}

export function AlbumsListResultToJSON(value?: AlbumsListResult | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'albums': value.albums === undefined ? undefined : (value.albums === null ? null : (value.albums as Array<any>).map(AlbumReadDtoToJSON)),
        'count': value.count,
        'total': value.total,
    };
}

