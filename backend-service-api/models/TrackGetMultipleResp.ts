/* tslint:disable */
/* eslint-disable */
/**
 * MusicDataService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TrackReadDto } from './TrackReadDto';
import {
    TrackReadDtoFromJSON,
    TrackReadDtoFromJSONTyped,
    TrackReadDtoToJSON,
} from './TrackReadDto';

/**
 * 
 * @export
 * @interface TrackGetMultipleResp
 */
export interface TrackGetMultipleResp {
    /**
     * 
     * @type {Array<TrackReadDto>}
     * @memberof TrackGetMultipleResp
     */
    tracks?: Array<TrackReadDto> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof TrackGetMultipleResp
     */
    notFound?: Array<string> | null;
}

/**
 * Check if a given object implements the TrackGetMultipleResp interface.
 */
export function instanceOfTrackGetMultipleResp(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TrackGetMultipleRespFromJSON(json: any): TrackGetMultipleResp {
    return TrackGetMultipleRespFromJSONTyped(json, false);
}

export function TrackGetMultipleRespFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrackGetMultipleResp {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'tracks': !exists(json, 'tracks') ? undefined : (json['tracks'] === null ? null : (json['tracks'] as Array<any>).map(TrackReadDtoFromJSON)),
        'notFound': !exists(json, 'notFound') ? undefined : json['notFound'],
    };
}

export function TrackGetMultipleRespToJSON(value?: TrackGetMultipleResp | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'tracks': value.tracks === undefined ? undefined : (value.tracks === null ? null : (value.tracks as Array<any>).map(TrackReadDtoToJSON)),
        'notFound': value.notFound,
    };
}

