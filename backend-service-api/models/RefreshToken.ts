/* tslint:disable */
/* eslint-disable */
/**
 * AuthenticationService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './User';

/**
 * 
 * @export
 * @interface RefreshToken
 */
export interface RefreshToken {
    /**
     * 
     * @type {string}
     * @memberof RefreshToken
     */
    tokenId?: string;
    /**
     * 
     * @type {Date}
     * @memberof RefreshToken
     */
    issuedTime?: Date;
    /**
     * 
     * @type {string}
     * @memberof RefreshToken
     */
    userId?: string;
    /**
     * 
     * @type {User}
     * @memberof RefreshToken
     */
    user?: User;
}

/**
 * Check if a given object implements the RefreshToken interface.
 */
export function instanceOfRefreshToken(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RefreshTokenFromJSON(json: any): RefreshToken {
    return RefreshTokenFromJSONTyped(json, false);
}

export function RefreshTokenFromJSONTyped(json: any, ignoreDiscriminator: boolean): RefreshToken {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'tokenId': !exists(json, 'tokenId') ? undefined : json['tokenId'],
        'issuedTime': !exists(json, 'issuedTime') ? undefined : (new Date(json['issuedTime'])),
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'user': !exists(json, 'user') ? undefined : UserFromJSON(json['user']),
    };
}

export function RefreshTokenToJSON(value?: RefreshToken | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'tokenId': value.tokenId,
        'issuedTime': value.issuedTime === undefined ? undefined : (value.issuedTime.toISOString()),
        'userId': value.userId,
        'user': UserToJSON(value.user),
    };
}

