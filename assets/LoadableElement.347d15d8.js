import { b as h, c as createComponent, bf as useSpinnerProps, bg as useSpinner, F as defineComponent, T as unref, bh as renderSlot, G as openBlock, U as createElementBlock, _ as _export_sfc, bb as LoadingStatus } from "./index.fa95aeae.js";
const svg = [
  h("g", {
    transform: "translate(-20,-20)"
  }, [
    h("path", {
      d: "M79.9,52.6C80,51.8,80,50.9,80,50s0-1.8-0.1-2.6l-5.1-0.4c-0.3-2.4-0.9-4.6-1.8-6.7l4.2-2.9c-0.7-1.6-1.6-3.1-2.6-4.5 L70,35c-1.4-1.9-3.1-3.5-4.9-4.9l2.2-4.6c-1.4-1-2.9-1.9-4.5-2.6L59.8,27c-2.1-0.9-4.4-1.5-6.7-1.8l-0.4-5.1C51.8,20,50.9,20,50,20 s-1.8,0-2.6,0.1l-0.4,5.1c-2.4,0.3-4.6,0.9-6.7,1.8l-2.9-4.1c-1.6,0.7-3.1,1.6-4.5,2.6l2.1,4.6c-1.9,1.4-3.5,3.1-5,4.9l-4.5-2.1 c-1,1.4-1.9,2.9-2.6,4.5l4.1,2.9c-0.9,2.1-1.5,4.4-1.8,6.8l-5,0.4C20,48.2,20,49.1,20,50s0,1.8,0.1,2.6l5,0.4 c0.3,2.4,0.9,4.7,1.8,6.8l-4.1,2.9c0.7,1.6,1.6,3.1,2.6,4.5l4.5-2.1c1.4,1.9,3.1,3.5,5,4.9l-2.1,4.6c1.4,1,2.9,1.9,4.5,2.6l2.9-4.1 c2.1,0.9,4.4,1.5,6.7,1.8l0.4,5.1C48.2,80,49.1,80,50,80s1.8,0,2.6-0.1l0.4-5.1c2.3-0.3,4.6-0.9,6.7-1.8l2.9,4.2 c1.6-0.7,3.1-1.6,4.5-2.6L65,69.9c1.9-1.4,3.5-3,4.9-4.9l4.6,2.2c1-1.4,1.9-2.9,2.6-4.5L73,59.8c0.9-2.1,1.5-4.4,1.8-6.7L79.9,52.6 z M50,65c-8.3,0-15-6.7-15-15c0-8.3,6.7-15,15-15s15,6.7,15,15C65,58.3,58.3,65,50,65z",
      fill: "currentColor"
    }, [
      h("animateTransform", {
        attributeName: "transform",
        type: "rotate",
        from: "90 50 50",
        to: "0 50 50",
        dur: "1s",
        repeatCount: "indefinite"
      })
    ])
  ]),
  h("g", {
    transform: "translate(20,20) rotate(15 50 50)"
  }, [
    h("path", {
      d: "M79.9,52.6C80,51.8,80,50.9,80,50s0-1.8-0.1-2.6l-5.1-0.4c-0.3-2.4-0.9-4.6-1.8-6.7l4.2-2.9c-0.7-1.6-1.6-3.1-2.6-4.5 L70,35c-1.4-1.9-3.1-3.5-4.9-4.9l2.2-4.6c-1.4-1-2.9-1.9-4.5-2.6L59.8,27c-2.1-0.9-4.4-1.5-6.7-1.8l-0.4-5.1C51.8,20,50.9,20,50,20 s-1.8,0-2.6,0.1l-0.4,5.1c-2.4,0.3-4.6,0.9-6.7,1.8l-2.9-4.1c-1.6,0.7-3.1,1.6-4.5,2.6l2.1,4.6c-1.9,1.4-3.5,3.1-5,4.9l-4.5-2.1 c-1,1.4-1.9,2.9-2.6,4.5l4.1,2.9c-0.9,2.1-1.5,4.4-1.8,6.8l-5,0.4C20,48.2,20,49.1,20,50s0,1.8,0.1,2.6l5,0.4 c0.3,2.4,0.9,4.7,1.8,6.8l-4.1,2.9c0.7,1.6,1.6,3.1,2.6,4.5l4.5-2.1c1.4,1.9,3.1,3.5,5,4.9l-2.1,4.6c1.4,1,2.9,1.9,4.5,2.6l2.9-4.1 c2.1,0.9,4.4,1.5,6.7,1.8l0.4,5.1C48.2,80,49.1,80,50,80s1.8,0,2.6-0.1l0.4-5.1c2.3-0.3,4.6-0.9,6.7-1.8l2.9,4.2 c1.6-0.7,3.1-1.6,4.5-2.6L65,69.9c1.9-1.4,3.5-3,4.9-4.9l4.6,2.2c1-1.4,1.9-2.9,2.6-4.5L73,59.8c0.9-2.1,1.5-4.4,1.8-6.7L79.9,52.6 z M50,65c-8.3,0-15-6.7-15-15c0-8.3,6.7-15,15-15s15,6.7,15,15C65,58.3,58.3,65,50,65z",
      fill: "currentColor"
    }, [
      h("animateTransform", {
        attributeName: "transform",
        type: "rotate",
        from: "0 50 50",
        to: "90 50 50",
        dur: "1s",
        repeatCount: "indefinite"
      })
    ])
  ])
];
var QSpinnerGears = createComponent({
  name: "QSpinnerGears",
  props: useSpinnerProps,
  setup(props) {
    const { cSize, classes } = useSpinner(props);
    return () => h("svg", {
      class: classes.value,
      width: cSize.value,
      height: cSize.value,
      viewBox: "0 0 100 100",
      preserveAspectRatio: "xMidYMid",
      xmlns: "http://www.w3.org/2000/svg"
    }, svg);
  }
});
const _hoisted_1 = { key: 3 };
const _sfc_main = defineComponent({
  __name: "LoadableElement",
  props: {
    stateController: {}
  },
  setup(__props) {
    const props = __props;
    return (_ctx, _cache) => {
      return props.stateController.status.value === unref(LoadingStatus).Loading ? renderSlot(_ctx.$slots, "loading", { key: 0 }) : props.stateController.status.value === unref(LoadingStatus).Error ? renderSlot(_ctx.$slots, "error", {
        key: 1,
        error: props.stateController.error.value
      }) : props.stateController.status.value === unref(LoadingStatus).Success ? renderSlot(_ctx.$slots, "default", {
        key: 2,
        data: props.stateController.state.value
      }) : (openBlock(), createElementBlock("div", _hoisted_1, "Loadable Element controller's state is never updated. Did you update the controller state or requested load?"));
    };
  }
});
var LoadableElement = /* @__PURE__ */ _export_sfc(_sfc_main, [["__file", "LoadableElement.vue"]]);
export { LoadableElement as L, QSpinnerGears as Q };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTG9hZGFibGVFbGVtZW50LjM0N2QxNWQ4LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi9ub2RlX21vZHVsZXMvcXVhc2FyL3NyYy9jb21wb25lbnRzL3NwaW5uZXIvUVNwaW5uZXJHZWFycy5qcyIsIi4uLy4uLy4uL3NyYy91dGlscy9Mb2FkYWJsZS9Mb2FkYWJsZUVsZW1lbnQudnVlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGggfSBmcm9tICd2dWUnXG5cbmltcG9ydCB1c2VTcGlubmVyLCB7IHVzZVNwaW5uZXJQcm9wcyB9IGZyb20gJy4vdXNlLXNwaW5uZXIuanMnXG5cbmltcG9ydCB7IGNyZWF0ZUNvbXBvbmVudCB9IGZyb20gJy4uLy4uL3V0aWxzL3ByaXZhdGUvY3JlYXRlLmpzJ1xuXG5jb25zdCBzdmcgPSBbXG4gIGgoJ2cnLCB7XG4gICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlKC0yMCwtMjApJ1xuICB9LCBbXG4gICAgaCgncGF0aCcsIHtcbiAgICAgIGQ6ICdNNzkuOSw1Mi42QzgwLDUxLjgsODAsNTAuOSw4MCw1MHMwLTEuOC0wLjEtMi42bC01LjEtMC40Yy0wLjMtMi40LTAuOS00LjYtMS44LTYuN2w0LjItMi45Yy0wLjctMS42LTEuNi0zLjEtMi42LTQuNSBMNzAsMzVjLTEuNC0xLjktMy4xLTMuNS00LjktNC45bDIuMi00LjZjLTEuNC0xLTIuOS0xLjktNC41LTIuNkw1OS44LDI3Yy0yLjEtMC45LTQuNC0xLjUtNi43LTEuOGwtMC40LTUuMUM1MS44LDIwLDUwLjksMjAsNTAsMjAgcy0xLjgsMC0yLjYsMC4xbC0wLjQsNS4xYy0yLjQsMC4zLTQuNiwwLjktNi43LDEuOGwtMi45LTQuMWMtMS42LDAuNy0zLjEsMS42LTQuNSwyLjZsMi4xLDQuNmMtMS45LDEuNC0zLjUsMy4xLTUsNC45bC00LjUtMi4xIGMtMSwxLjQtMS45LDIuOS0yLjYsNC41bDQuMSwyLjljLTAuOSwyLjEtMS41LDQuNC0xLjgsNi44bC01LDAuNEMyMCw0OC4yLDIwLDQ5LjEsMjAsNTBzMCwxLjgsMC4xLDIuNmw1LDAuNCBjMC4zLDIuNCwwLjksNC43LDEuOCw2LjhsLTQuMSwyLjljMC43LDEuNiwxLjYsMy4xLDIuNiw0LjVsNC41LTIuMWMxLjQsMS45LDMuMSwzLjUsNSw0LjlsLTIuMSw0LjZjMS40LDEsMi45LDEuOSw0LjUsMi42bDIuOS00LjEgYzIuMSwwLjksNC40LDEuNSw2LjcsMS44bDAuNCw1LjFDNDguMiw4MCw0OS4xLDgwLDUwLDgwczEuOCwwLDIuNi0wLjFsMC40LTUuMWMyLjMtMC4zLDQuNi0wLjksNi43LTEuOGwyLjksNC4yIGMxLjYtMC43LDMuMS0xLjYsNC41LTIuNkw2NSw2OS45YzEuOS0xLjQsMy41LTMsNC45LTQuOWw0LjYsMi4yYzEtMS40LDEuOS0yLjksMi42LTQuNUw3Myw1OS44YzAuOS0yLjEsMS41LTQuNCwxLjgtNi43TDc5LjksNTIuNiB6IE01MCw2NWMtOC4zLDAtMTUtNi43LTE1LTE1YzAtOC4zLDYuNy0xNSwxNS0xNXMxNSw2LjcsMTUsMTVDNjUsNTguMyw1OC4zLDY1LDUwLDY1eicsXG4gICAgICBmaWxsOiAnY3VycmVudENvbG9yJ1xuICAgIH0sIFtcbiAgICAgIGgoJ2FuaW1hdGVUcmFuc2Zvcm0nLCB7XG4gICAgICAgIGF0dHJpYnV0ZU5hbWU6ICd0cmFuc2Zvcm0nLFxuICAgICAgICB0eXBlOiAncm90YXRlJyxcbiAgICAgICAgZnJvbTogJzkwIDUwIDUwJyxcbiAgICAgICAgdG86ICcwIDUwIDUwJyxcbiAgICAgICAgZHVyOiAnMXMnLFxuICAgICAgICByZXBlYXRDb3VudDogJ2luZGVmaW5pdGUnXG4gICAgICB9KVxuICAgIF0pXG4gIF0pLFxuICBoKCdnJywge1xuICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZSgyMCwyMCkgcm90YXRlKDE1IDUwIDUwKSdcbiAgfSwgW1xuICAgIGgoJ3BhdGgnLCB7XG4gICAgICBkOiAnTTc5LjksNTIuNkM4MCw1MS44LDgwLDUwLjksODAsNTBzMC0xLjgtMC4xLTIuNmwtNS4xLTAuNGMtMC4zLTIuNC0wLjktNC42LTEuOC02LjdsNC4yLTIuOWMtMC43LTEuNi0xLjYtMy4xLTIuNi00LjUgTDcwLDM1Yy0xLjQtMS45LTMuMS0zLjUtNC45LTQuOWwyLjItNC42Yy0xLjQtMS0yLjktMS45LTQuNS0yLjZMNTkuOCwyN2MtMi4xLTAuOS00LjQtMS41LTYuNy0xLjhsLTAuNC01LjFDNTEuOCwyMCw1MC45LDIwLDUwLDIwIHMtMS44LDAtMi42LDAuMWwtMC40LDUuMWMtMi40LDAuMy00LjYsMC45LTYuNywxLjhsLTIuOS00LjFjLTEuNiwwLjctMy4xLDEuNi00LjUsMi42bDIuMSw0LjZjLTEuOSwxLjQtMy41LDMuMS01LDQuOWwtNC41LTIuMSBjLTEsMS40LTEuOSwyLjktMi42LDQuNWw0LjEsMi45Yy0wLjksMi4xLTEuNSw0LjQtMS44LDYuOGwtNSwwLjRDMjAsNDguMiwyMCw0OS4xLDIwLDUwczAsMS44LDAuMSwyLjZsNSwwLjQgYzAuMywyLjQsMC45LDQuNywxLjgsNi44bC00LjEsMi45YzAuNywxLjYsMS42LDMuMSwyLjYsNC41bDQuNS0yLjFjMS40LDEuOSwzLjEsMy41LDUsNC45bC0yLjEsNC42YzEuNCwxLDIuOSwxLjksNC41LDIuNmwyLjktNC4xIGMyLjEsMC45LDQuNCwxLjUsNi43LDEuOGwwLjQsNS4xQzQ4LjIsODAsNDkuMSw4MCw1MCw4MHMxLjgsMCwyLjYtMC4xbDAuNC01LjFjMi4zLTAuMyw0LjYtMC45LDYuNy0xLjhsMi45LDQuMiBjMS42LTAuNywzLjEtMS42LDQuNS0yLjZMNjUsNjkuOWMxLjktMS40LDMuNS0zLDQuOS00LjlsNC42LDIuMmMxLTEuNCwxLjktMi45LDIuNi00LjVMNzMsNTkuOGMwLjktMi4xLDEuNS00LjQsMS44LTYuN0w3OS45LDUyLjYgeiBNNTAsNjVjLTguMywwLTE1LTYuNy0xNS0xNWMwLTguMyw2LjctMTUsMTUtMTVzMTUsNi43LDE1LDE1QzY1LDU4LjMsNTguMyw2NSw1MCw2NXonLFxuICAgICAgZmlsbDogJ2N1cnJlbnRDb2xvcidcbiAgICB9LCBbXG4gICAgICBoKCdhbmltYXRlVHJhbnNmb3JtJywge1xuICAgICAgICBhdHRyaWJ1dGVOYW1lOiAndHJhbnNmb3JtJyxcbiAgICAgICAgdHlwZTogJ3JvdGF0ZScsXG4gICAgICAgIGZyb206ICcwIDUwIDUwJyxcbiAgICAgICAgdG86ICc5MCA1MCA1MCcsXG4gICAgICAgIGR1cjogJzFzJyxcbiAgICAgICAgcmVwZWF0Q291bnQ6ICdpbmRlZmluaXRlJ1xuICAgICAgfSlcbiAgICBdKVxuICBdKVxuXVxuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVDb21wb25lbnQoe1xuICBuYW1lOiAnUVNwaW5uZXJHZWFycycsXG5cbiAgcHJvcHM6IHVzZVNwaW5uZXJQcm9wcyxcblxuICBzZXR1cCAocHJvcHMpIHtcbiAgICBjb25zdCB7IGNTaXplLCBjbGFzc2VzIH0gPSB1c2VTcGlubmVyKHByb3BzKVxuXG4gICAgcmV0dXJuICgpID0+IGgoJ3N2ZycsIHtcbiAgICAgIGNsYXNzOiBjbGFzc2VzLnZhbHVlLFxuICAgICAgd2lkdGg6IGNTaXplLnZhbHVlLFxuICAgICAgaGVpZ2h0OiBjU2l6ZS52YWx1ZSxcbiAgICAgIHZpZXdCb3g6ICcwIDAgMTAwIDEwMCcsXG4gICAgICBwcmVzZXJ2ZUFzcGVjdFJhdGlvOiAneE1pZFlNaWQnLFxuICAgICAgeG1sbnM6ICdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZydcbiAgICB9LCBzdmcpXG4gIH1cbn0pXG4iLCI8dGVtcGxhdGU+XG4gIDxzbG90XG4gICAgdi1pZj1cInByb3BzLnN0YXRlQ29udHJvbGxlci5zdGF0dXMudmFsdWUgPT09IExvYWRpbmdTdGF0dXMuTG9hZGluZ1wiXG4gICAgbmFtZT1cImxvYWRpbmdcIlxuICAvPlxuICA8c2xvdFxuICAgIHYtZWxzZS1pZj1cInByb3BzLnN0YXRlQ29udHJvbGxlci5zdGF0dXMudmFsdWUgPT09IExvYWRpbmdTdGF0dXMuRXJyb3JcIlxuICAgIG5hbWU9XCJlcnJvclwiXG4gICAgOmVycm9yPVwicHJvcHMuc3RhdGVDb250cm9sbGVyLmVycm9yLnZhbHVlXCJcbiAgLz5cbiAgPHNsb3RcbiAgICB2LWVsc2UtaWY9XCJwcm9wcy5zdGF0ZUNvbnRyb2xsZXIuc3RhdHVzLnZhbHVlID09PSBMb2FkaW5nU3RhdHVzLlN1Y2Nlc3NcIlxuICAgIDpkYXRhPVwicHJvcHMuc3RhdGVDb250cm9sbGVyLnN0YXRlLnZhbHVlXCJcbiAgLz5cbiAgPGRpdiB2LWVsc2U+TG9hZGFibGUgRWxlbWVudCBjb250cm9sbGVyJ3Mgc3RhdGUgaXMgbmV2ZXIgdXBkYXRlZC4gRGlkIHlvdSB1cGRhdGUgdGhlIGNvbnRyb2xsZXIgc3RhdGUgb3IgcmVxdWVzdGVkXG4gICAgbG9hZD88L2Rpdj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQgc2V0dXAgbGFuZz1cInRzXCIgZ2VuZXJpYz1cIlRcIj5cbmltcG9ydCB7IGRlZmluZVByb3BzIH0gZnJvbSAndnVlJztcbmltcG9ydCB7IExvYWRpbmdTdGF0dXMsIExvYWRhYmxlU3RhdGUgfSBmcm9tICcuL0xvYWRhYmxlQ29udHJvbGxlcic7XG5cbmNvbnN0IHByb3BzID0gZGVmaW5lUHJvcHM8e1xuICBzdGF0ZUNvbnRyb2xsZXI6IExvYWRhYmxlU3RhdGU8VD47XG59PigpO1xuPC9zY3JpcHQ+XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQU1BLE1BQU0sTUFBTTtBQUFBLEVBQ1YsRUFBRSxLQUFLO0FBQUEsSUFDTCxXQUFXO0FBQUEsRUFDZixHQUFLO0FBQUEsSUFDRCxFQUFFLFFBQVE7QUFBQSxNQUNSLEdBQUc7QUFBQSxNQUNILE1BQU07QUFBQSxJQUNaLEdBQU87QUFBQSxNQUNELEVBQUUsb0JBQW9CO0FBQUEsUUFDcEIsZUFBZTtBQUFBLFFBQ2YsTUFBTTtBQUFBLFFBQ04sTUFBTTtBQUFBLFFBQ04sSUFBSTtBQUFBLFFBQ0osS0FBSztBQUFBLFFBQ0wsYUFBYTtBQUFBLE1BQ3JCLENBQU87QUFBQSxJQUNQLENBQUs7QUFBQSxFQUNMLENBQUc7QUFBQSxFQUNELEVBQUUsS0FBSztBQUFBLElBQ0wsV0FBVztBQUFBLEVBQ2YsR0FBSztBQUFBLElBQ0QsRUFBRSxRQUFRO0FBQUEsTUFDUixHQUFHO0FBQUEsTUFDSCxNQUFNO0FBQUEsSUFDWixHQUFPO0FBQUEsTUFDRCxFQUFFLG9CQUFvQjtBQUFBLFFBQ3BCLGVBQWU7QUFBQSxRQUNmLE1BQU07QUFBQSxRQUNOLE1BQU07QUFBQSxRQUNOLElBQUk7QUFBQSxRQUNKLEtBQUs7QUFBQSxRQUNMLGFBQWE7QUFBQSxNQUNyQixDQUFPO0FBQUEsSUFDUCxDQUFLO0FBQUEsRUFDTCxDQUFHO0FBQ0g7QUFFQSxJQUFBLGdCQUFlLGdCQUFnQjtBQUFBLEVBQzdCLE1BQU07QUFBQSxFQUVOLE9BQU87QUFBQSxFQUVQLE1BQU8sT0FBTztBQUNaLFVBQU0sRUFBRSxPQUFPLFlBQVksV0FBVyxLQUFLO0FBRTNDLFdBQU8sTUFBTSxFQUFFLE9BQU87QUFBQSxNQUNwQixPQUFPLFFBQVE7QUFBQSxNQUNmLE9BQU8sTUFBTTtBQUFBLE1BQ2IsUUFBUSxNQUFNO0FBQUEsTUFDZCxTQUFTO0FBQUEsTUFDVCxxQkFBcUI7QUFBQSxNQUNyQixPQUFPO0FBQUEsSUFDUixHQUFFLEdBQUc7QUFBQSxFQUNQO0FBQ0gsQ0FBQzs7Ozs7Ozs7QUN0Q0QsVUFBTSxRQUFROzs7Ozs7Ozs7Ozs7OzsifQ==
